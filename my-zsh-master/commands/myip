#!/usr/bin/env bash

function myip {
  local cmd="$1"
  [[ $# > 0 ]] && shift

  case "$cmd" in
    'internal'|'int'|'i')
      ip-internal $@
      ;;
    'external'|'ext'|'e')
      ip-external $@
      ;;
    *)
      if [ -n "$cmd" ]
      then
        echo "Unknown command '$cmd'" >&2
      fi
      echo "Usage: " >&2
      echo "   ${0##*/} int[ernal] [--interface <interface name>]" >&2
      echo "   ${0##*/} ext[ernal] [--interface <interface name>] [--details]" >&2
      
      return 1
      ;;
  esac
}

function default-interface {
  echo "$(route -n get default | grep 'interface:' | sed 's/^.*: //')"
}

function ip-internal {
  
  local interface=$(default-interface)
  
  while [[ $# > 0 ]]
  do
    local param_key="$1"
    shift

    case "$param_key" in
      '--interface'|'-i')
        interface="$1"
        shift
        ;;
      *)
        echo "Unknown parameter '$param_key'" >&2
        echo "Valid parameters:" >&2
        echo "    --interface <name>, -i <name>" >&2
        return 1
        ;;
    esac
  done
  
  echo "ipv4: $(ifconfig en0 | grep ' *inet .*' | cut -d ' ' -f2)"
  echo "ipv6: $(ifconfig en0 | grep ' *inet6 .* temporary' | cut -d ' ' -f2)"
}

function ip-external {

  local interface=$(default-interface)
  local details=false

  while [[ $# > 0 ]]
  do
    local param_key="$1"
    shift

    case "$param_key" in
      '--interface'|'-i')
        interface="$1"
        shift
        ;;
      '--details'|'-d')
        details="true"
        ;;
      *)
        echo "Unknown parameter '$param_key'" >&2
        echo "Valid parameters:" >&2
        echo "    --interface <name>, -i <name>" >&2
        echo "    --details, -d" >&2
        return 1
        ;;
    esac
  done
  
  local endpoint='https://ipapi.co/'
  if [ "$details" == 'true' ]
  then
    endpoint+='json'
  else
    endpoint+='ip'
  fi
  
  echo "ipv4: $(curl --ipv4 $interface_param "$endpoint" -s)"
  echo "ipv6: $(curl --ipv6 $interface_param "$endpoint" -s)"
}

myip "$@"
